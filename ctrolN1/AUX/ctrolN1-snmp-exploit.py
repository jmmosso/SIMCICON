#!/usr/bin/python -B
# El exploit simula la explotacion de un desbordamiento y la inyeccion
# de codigo (shellcode) en la cotroladora (ctrolN1). En realidad se
# toman los dos primeros args: host, eid.

from pysnmp.entity.rfc3413.oneliner import cmdgen
import sys
 
# get argument list using sys module
sys.argv
total = len(sys.argv)

if (total < 2):
 print 'USO>'
 print 'comando host oid shellcode'
 print 'Ejemplo: exploit localhost iso.3.6.1.4.1.42.1.0 CCCCCCCCCCCCCCCCCCCC'
 exit (0)

#print total
# Get the arguments list 
cmdargs = str(sys.argv)
#print cmdargs

IP = str(sys.argv[1])
OID = str(sys.argv[2])

cmdGen = cmdgen.CommandGenerator()

errorIndication, errorStatus, errorIndex, varBinds = cmdGen.getCmd(
    cmdgen.CommunityData('public'),
#    cmdgen.UdpTransportTarget(('localhost', 161)),
    cmdgen.UdpTransportTarget((IP, 161)),

#viene en el ejemplo
#    'iso.3.6.1.2.1.1.1.0'

#1.3.6.1.4.1.42.1.0 = 470 (NO ATACA)
#    'iso.3.6.1.4.1.42.1.0'

#1.3.6.1.4.1.42.2.0 = Controladora ECD1 (NO ATACA)
#    'iso.3.6.1.4.1.42.2.0'

#1.3.6.1.4.1.42.4.0 = ECD1 (NO ATACA)
#    'iso.3.6.1.4.1.42.4.0'

#1.3.6.1.4.1.42.5.0 = ABF012139FFA34S1543F0KK1P19BF (SI ATACA)
#    'iso.3.6.1.4.1.42.5.0'

#1.3.6.1.4.1.42.6.0 = 5.7 (NO ATACA)
#    'iso.3.6.1.4.1.42.6.0'
     OID

)
print('\n'.join([ '%s = %s' % varBind for varBind in varBinds]))
